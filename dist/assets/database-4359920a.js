import{s as i}from"./index-712c3e67.js";const n={async getUsers(t){try{const{data:r,error:e}=await i.from("users").select("*").eq("family_id",t);if(e){if(console.error("Database error:",e),e.code==="42P01")return console.warn("Users table does not exist. Please run database-schema.sql in Supabase."),[];throw e}return(r==null?void 0:r.map(a=>({...a,createdAt:new Date(a.created_at),birthDate:a.birth_date?new Date(a.birth_date):void 0})))||[]}catch(r){return console.error("Error fetching users:",r),[]}},async createUser(t){var a;const{data:r,error:e}=await i.from("users").insert({family_id:t.familyId,name:t.name,role:t.role,birth_date:(a=t.birthDate)==null?void 0:a.toISOString(),age:t.age}).select().single();if(e)throw e;return{...r,createdAt:new Date(r.created_at),birthDate:r.birth_date?new Date(r.birth_date):void 0}},async getTasks(t){try{const{data:r,error:e}=await i.from("tasks").select("*").eq("family_id",t);if(e){if(console.error("Database error:",e),e.code==="42P01")return console.warn("Tasks table does not exist. Please run database-schema.sql in Supabase."),[];throw e}return(r==null?void 0:r.map(a=>({...a,createdAt:new Date(a.created_at)})))||[]}catch(r){return console.error("Error fetching tasks:",r),[]}},async createTask(t,r){const{data:e,error:a}=await i.from("tasks").insert({family_id:r,title:t.title,description:t.description,points:t.points,category:t.category,difficulty:t.difficulty,is_recurring:t.isRecurring,created_by:t.createdBy,assigned_to:t.assignedTo}).select().single();if(a)throw a;return{...e,isRecurring:e.is_recurring,createdBy:e.created_by,assignedTo:e.assigned_to,createdAt:new Date(e.created_at)}},async updateTask(t,r){const{data:e,error:a}=await i.from("tasks").update({title:r.title,description:r.description,points:r.points,category:r.category,difficulty:r.difficulty,is_recurring:r.isRecurring,assigned_to:r.assignedTo}).eq("id",t).select().single();if(a)throw a;return{...e,isRecurring:e.is_recurring,createdBy:e.created_by,assignedTo:e.assigned_to,createdAt:new Date(e.created_at)}},async deleteTask(t){const{error:r}=await i.from("tasks").delete().eq("id",t);if(r)throw r},async getTaskCompletions(t){try{const{data:r,error:e}=await i.from("task_completions").select("*").eq("family_id",t);if(e){if(console.error("Database error:",e),e.code==="42P01")return console.warn("Task completions table does not exist. Please run database-schema.sql in Supabase."),[];throw e}return(r==null?void 0:r.map(a=>({...a,taskId:a.task_id,childId:a.child_id,submittedAt:new Date(a.submitted_at),approvedAt:a.approved_at?new Date(a.approved_at):void 0,photoUrl:a.photo_url})))||[]}catch(r){return console.error("Error fetching task completions:",r),[]}},async createTaskCompletion(t,r){var s;const{data:e,error:a}=await i.from("task_completions").insert({family_id:r,task_id:t.taskId,child_id:t.childId,status:t.status,submitted_at:t.submittedAt.toISOString(),approved_at:(s=t.approvedAt)==null?void 0:s.toISOString(),photo_url:t.photoUrl,comments:t.comments}).select().single();if(a)throw a;return{...e,taskId:e.task_id,childId:e.child_id,submittedAt:new Date(e.submitted_at),approvedAt:e.approved_at?new Date(e.approved_at):void 0,photoUrl:e.photo_url}},async updateTaskCompletion(t,r){var s;const{data:e,error:a}=await i.from("task_completions").update({status:r.status,approved_at:(s=r.approvedAt)==null?void 0:s.toISOString(),comments:r.comments}).eq("id",t).select().single();if(a)throw a;return{...e,taskId:e.task_id,childId:e.child_id,submittedAt:new Date(e.submitted_at),approvedAt:e.approved_at?new Date(e.approved_at):void 0,photoUrl:e.photo_url}},async getPointTransactions(t){try{const{data:r,error:e}=await i.from("point_transactions").select("*").eq("family_id",t);if(e){if(console.error("Database error:",e),e.code==="42P01")return console.warn("Point transactions table does not exist. Please run database-schema.sql in Supabase."),[];throw e}return(r==null?void 0:r.map(a=>({...a,userId:a.user_id,createdAt:new Date(a.created_at)})))||[]}catch(r){return console.error("Error fetching point transactions:",r),[]}},async createPointTransaction(t,r){const{data:e,error:a}=await i.from("point_transactions").insert({family_id:r,user_id:t.userId,type:t.type,amount:t.amount,description:t.description,created_at:t.createdAt.toISOString()}).select().single();if(a)throw a;return{...e,userId:e.user_id,createdAt:new Date(e.created_at)}},async getEvents(t){const{data:r,error:e}=await i.from("events").select("*").eq("family_id",t);if(e)throw e;return(r==null?void 0:r.map(a=>({...a,eventType:a.event_type,pointsConfig:a.points_config,assignedTo:a.assigned_to,createdBy:a.created_by,dueDate:a.due_date?new Date(a.due_date):void 0,createdAt:new Date(a.created_at)})))||[]},async createEvent(t,r){var s;const{data:e,error:a}=await i.from("events").insert({family_id:r,title:t.title,description:t.description,category:t.category,event_type:t.eventType,points_config:t.pointsConfig,assigned_to:t.assignedTo,created_by:t.createdBy,due_date:(s=t.dueDate)==null?void 0:s.toISOString()}).select().single();if(a)throw a;return{...e,eventType:e.event_type,pointsConfig:e.points_config,assignedTo:e.assigned_to,createdBy:e.created_by,dueDate:e.due_date?new Date(e.due_date):void 0,createdAt:new Date(e.created_at)}},async getEventResults(t){const{data:r,error:e}=await i.from("event_results").select("*").eq("family_id",t);if(e)throw e;return(r==null?void 0:r.map(a=>({...a,eventId:a.event_id,childId:a.child_id,resultType:a.result_type,earnedPoints:a.earned_points,bonusEarned:a.bonus_earned,submittedAt:new Date(a.submitted_at),approvedAt:a.approved_at?new Date(a.approved_at):void 0})))||[]},async createEventResult(t,r){var s;const{data:e,error:a}=await i.from("event_results").insert({family_id:r,event_id:t.eventId,child_id:t.childId,result_type:t.resultType,score:t.score,evaluation:t.evaluation,earned_points:t.earnedPoints,bonus_earned:t.bonusEarned,submitted_at:t.submittedAt.toISOString(),approved_at:(s=t.approvedAt)==null?void 0:s.toISOString(),status:t.status,comments:t.comments}).select().single();if(a)throw a;return{...e,eventId:e.event_id,childId:e.child_id,resultType:e.result_type,earnedPoints:e.earned_points,bonusEarned:e.bonus_earned,submittedAt:new Date(e.submitted_at),approvedAt:e.approved_at?new Date(e.approved_at):void 0}},async getRateRules(t){const{data:r,error:e}=await i.from("rate_rules").select("*").eq("family_id",t);if(e)throw e;return(r==null?void 0:r.map(a=>({...a,isActive:a.is_active,createdAt:new Date(a.created_at),conditions:{...a.conditions,startDate:a.conditions.startDate?new Date(a.conditions.startDate):void 0,endDate:a.conditions.endDate?new Date(a.conditions.endDate):void 0}})))||[]},async createRateRule(t,r){const{data:e,error:a}=await i.from("rate_rules").insert({family_id:r,name:t.name,type:t.type,conditions:t.conditions,multiplier:t.multiplier,bonus_points:t.bonusPoints,description:t.description,is_active:t.isActive}).select().single();if(a)throw a;return{...e,isActive:e.is_active,bonusPoints:e.bonus_points,createdAt:new Date(e.created_at),conditions:{...e.conditions,startDate:e.conditions.startDate?new Date(e.conditions.startDate):void 0,endDate:e.conditions.endDate?new Date(e.conditions.endDate):void 0}}},generateId(){return crypto.randomUUID()}};export{n as d};
